class TL
super TWL
metaclass TLClass
public 

(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 creation arguments: *)
root :Root,
vmInterface :VMInterface,
pool :Pool,

(* syntax stuff: *)
twlTerminals :TWLTerminals,
parser :AbstractParser(TWLParseUnit),
scanner :ReentrantTWLScanner,

(* system components: *)
typeManager :TypeManager,
classManager :ClassManager,
typeChecker :TypeChecker,
compiler :Compiler,
topLevel :TopLevel,
loader :ClassLoader

methods

linkSyntax
{
  twlTerminals := TWLTerminals.new,
  let grammar = TWLGram.new(twlTerminals),
  let parserBuilder = ParserGen(:ReentrantCompactParser).new(CompactParserBuilder.new),
  parser := parserBuilder.generate(grammar.gram),
  scanner := ReentrantTWLScanner.new(twlTerminals)
}

linkSystem
{
  typeManager := TypeManager.new(root),
  classManager := ClassManager.new(root, pool, typeManager),
  typeChecker := TypeChecker.new(classManager, pool),
  compiler := Compiler.new(vmInterface, root),
  loader := ClassLoader.new(scanner, parser, compiler, classManager),
  topLevel := TopLevel.new(scanner, parser, compiler, classManager, pool, loader)
}

private methods

_init :Self
{ super._init,
  linkSyntax,
  linkSystem,
  self
}
;
