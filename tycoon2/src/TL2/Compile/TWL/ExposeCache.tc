class ExposeCache
  super TWL
  metaclass SimpleConcreteClass(ExposeCache)

public methods

  register(t :Type, s :Subst, et :Type, es :Subst) { cache[Pair.new(t, s)] := Pair.new(et, es) }
  has(t :Type, s :Subst) { cache.includesKey(Pair.new(t, s)) }
  
  lookup(T <: Void, t :Type, s :Subst, cont :Fun2(Type, Subst, T)) :T
  {
    let p = cache[Pair.new(t, s)],
    cont[p.first, p.second]
  }

private

  cache :Dictionary(Pair(Type, Subst), Pair(Type, Subst))

methods

  _init :Self {
    cache := Dictionary.new,
    self
  }

;
