(*
\cp /local/tw/agawecki/tl2/hox/lib/librts.so.nothreads $HOX_HOME/lib/
\cp $HOX_HOME/lib/librts.so $HOX_HOME/lib/librts.so.threads

\cp $HOX_HOME/lib/librts.so.nothreads $HOX_HOME/lib/librts.so
ln -s $HOX_HOME/src/TL2 $TYCOON_ROOT/TWL
ln -s $HOX_HOME/src/TL2 $HOX_HOME/src/TWL

cd $TYCOON_ROOT/bootlib
tycoon -store TWL -create -bootFile tool.x

(* initialize the new system image - loads all classes *)
DO load "../TWL/Compile/TWL/bootstrap.tyc";

\cp $HOX_HOME/lib/librts.so.threads $HOX_HOME/lib/librts.so
cd $TYCOON_ROOT/bootlib
tycoon2 -bootstrap dump
tycoon2 Bootstrap.ts
(* assume that the bootstrapped classes are typechecked *)
Array.fromContainer(tycoon.tl.typeChecker.agenda).do(
  fun(c :ClassPublic) {
    tycoon.tl.typeChecker.ignore(c)
  }
);
tycoon.saveSystem;
DO exit;

cp $TYCOON_ROOT/bootlib/Bootstrap.ts $HOX_HOME/TL2.ts

cd $HOX_HOME
./TL2.ts
*)

(* load all required classes *)
DO load "../TWL/boot.tyc";
DO load "../TWL/Util/Util.tc";
class MD5 metaclass AbstractClass;
DO load "../TWL/Util/MD5Class.tc";
DO load "../TWL/Util/MD5.tc";
(*tycoon.saveSystem;*)
DO load "../TWL/Compile/Compile.tyc";
(*tycoon.saveSystem;*)
DO load "../TWL/Compile/Scan/Scan.tyc";
DO load "../TWL/Compile/Scan/Eager/Eager.tyc";
(*tycoon.saveSystem;*)
DO load "../TWL/Compile/Parse/Parse.tyc";
(*tycoon.saveSystem;*)
DO load "../TWL/Compile/TWL/TWL.tyc";
(*tycoon.saveSystem;*)
Date.now;
(*DO check;*);

DO load "../TWL/Compile/TWL/bootstrap2.tyc";

(*
List.fromSequence(Resource.allOpenResources).do(fun(r :WeakRef(Resource)){r.value.clazz == File ? {r.value.close}});
*)

(*;
define t :Tracer;
t := Tracer.new;
DO startProfile;
t.traceToFile(newTL.root, "dump");
DO stopProfile;
*)

(*
tycoon.saveSystem;
*)


