class UnificationDB
  super TWL
  metaclass SimpleConcreteClass(UnificationDB)

public methods

  saveUnivar(u :UnifyType) {
    varStack.addFirst(u),
    ltStack.addFirst(u.lowerBoundType),
    lsStack.addFirst(u.lowerBoundSubst),
    utStack.addFirst(u.upperBoundType),
    usStack.addFirst(u.upperBoundSubst)
  }

  unificationState :Int {
    varStack.size
  }
  
  retractTo(to :Int) {
    while({unificationState > to}, {
      let v = varStack.removeFirst,
      let lt = ltStack.removeFirst,
      let ls = lsStack.removeFirst,
      let ut = utStack.removeFirst,
      let us = usStack.removeFirst,

      v.resetTo(lt, ls, ut, us)
    })
  }

  reset {
    varStack := Stack.new,
    ltStack  := Stack.new,
    lsStack  := Stack.new,
    utStack  := Stack.new,
    usStack  := Stack.new
  }    

private

  varStack :Stack(UnifyType),
  ltStack  :Stack(Type),
  lsStack  :Stack(Subst),
  utStack  :Stack(Type),
  usStack  :Stack(Subst)

methods

  _init :Self
  {
    reset,
    self
  }

;

