class ValueTrace
  super TypeCheckTrace

public methods

  value :Value { _value }
  msg  :String
  {
    "While checking value: "+value.printString
  }

  shouldPrint :Bool { value.isSimple }

  (*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 value."class" != BlockValue && { value."class" != LetValue } && { value."class" != WhileValue } &&
		    { !value."class".isSubClassOf(IfValue) } && { value."class" != CompiledFun }
		    && { value."class" != SendValue || { _typeCast(value, :SendValue).receiver."class" != CompiledFun }}
  *)		   

private

  _value :Value

methods

  _initValue(value :Value)
  {
    _value := value,
    super._init1(List.with1(value.pos))
  }

;
