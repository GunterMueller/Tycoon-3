class ValueIde
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 name :type *)
super Ide
metaclass ValueIdeClass

public methods

assigned :Bool
{ _assigned }

mutable :Bool
{ _mutable }

accessedFromClosure :Bool
{ _accessedFromClosure }

relationName :String
{ " :" }

case( T <: Void,
      value :Fun1(ValueIde,T),
      type :Fun1(TypeIde,T),
      subType :Fun1(SubTypeIde,T)) :T
{
  value[self]
}

scope(env :Scoper) :ValueIde
{
  let i = super.scope(env),
  i.isNotNil
   ? { let i = i.asValueIde,
       i.isNotNil
        ? { i }
        : { env.errorLog.error(pos, "type identifier used as value: "+name),
            self } }
   : { nil }
}

setImmutable
{ assert !assigned,
  _mutable := false
}

setAssigned
{ assert mutable,
  _assigned := true
}

setAccessedFromClosure
{ _accessedFromClosure := true
}

celled :Bool
{ assigned && { accessedFromClosure } }

private

_mutable :Bool,
_assigned :Bool,
_accessedFromClosure :Bool

methods

_init :Self
{ super._init,
  _mutable := true,
  _assigned := false,
  _accessedFromClosure := false,
  self
}
;


