class ConsSubst
super Subst
metaclass ConsSubstClass

public

ide :Ide,
type :Type,
tail :Subst

methods
subst(T <:Void,
      ide :Ide,
      ifNotFound :Fun0(T),
      cont :Fun2(Type, Subst, T)) :T
{
  ide == self.ide
    ? { cont[type, tail] }
    : { tail.subst(ide, ifNotFound, cont) }
}

printOn(o :Output)
{
  o << "[" << type << " / " << ide.name << "[" << ide.identityHash << "]]" << tail
}

;


