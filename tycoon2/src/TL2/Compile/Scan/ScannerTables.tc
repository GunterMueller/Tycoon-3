class ScannerTables(E <: Object)
super UserScannerTables(E,Void)
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 ScannerTables
     E: invariant

   Why @super UserScannerTables(E,Void)", not UserScannerTables(E,Nil) ?
   
   Note that since UserScannerTables is contravariant in the second parameter,
   so that
     UserScannerTables(E,UserState) <: UserScannerTables(E,Void)
   if and only if
     UserState=Void
   and
     UserScannerTables(E,UserState) <: UserScannerTables(E,Nil)
   for all types UserState.
     
   Void means: The actions in the UserScannerTables must not use the
               scanner's user state.
   Nil means: The actual  userState will always be nil, so the actions
	      can do whatever they want with it.

   For scanners that do not use actions, Void is your choice.
*)
meta AbstractClass
{
}
