class ErrorLog
super Parse
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta SimpleConcreteClass(ErrorLog)
{
errout :Output

nbErrors :Int

hasErrors :Bool
  (* *)
{ nbErrors > 0
}

"hasErrors:="(b :Bool):Bool
  (* *)
{ if( b  then: {
    nbErrors := nbErrors + 1
  } else: {
    nbErrors := 0
  })
  b
}

fatal(pos :SourcePos, msg :String) :Void
  (* *)
{
  message(pos, "fatal", msg)
  ErrorLogError.new.raise
}

error(pos :SourcePos, msg :String) :Void
  (* *)
{
  hasErrors := true
  message(pos, "error", msg)
}

warning(pos :SourcePos, msg :String) :Void
  (* *)
{
  message(pos, "warning", msg)
}

raiseError :Void
  (* *)
{
  if( hasErrors then: {
    hasErrors := false
    ErrorLogError.new.raise
  })
}

reset :Void
  (* *)
{ hasErrors := false }

private

message(pos :SourcePos, degree :String, msg :String) :Void
  (* *)
{
  errout.writeAll(pos.printString+": "+degree+": "+msg+"\n")
}

_init :Void
  (* *)
{
  super._init
  hasErrors := false
  errout := tycoon.stdout
  self
}

}
