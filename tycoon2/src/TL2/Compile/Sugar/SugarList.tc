class SugarList(E <: Object)
super Sugar
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 *)
meta SimpleConcreteClass(SugarList(E))
{
openingParen :String

elements :GapArray(E)
  (* elements[n] is followed by commas[n].
     comma.size is arg.size - 1 *)

commas :GapArray(String)

closingParen :String

printOn(out :Output) :Void
  (* *)
{
  out << openingParen
  if( !elements.isEmpty
  then: { argsReader ::= elements.reader
      commasReader ::= commas.reader
      out << argsReader.read
      while({ c ::= commasReader.read
	      a ::= argsReader.read
	      c.isNotNil
	      && ( out << c << a
	           true ) } do: {
      }) })
  out << closingParen
}

private

_init :Void
  (* *)
{
  super._init
  openingParen := ""
  elements := GapArray.new0
  commas := GapArray.new0
  closingParen := ""
  self
}

}
