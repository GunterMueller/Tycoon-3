class TL2Debugger
super TL2
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

   TL2Debugger.tc 1.2 98/11/02 Axel Wienberg

   The machine notifies the Debugger object registered in the root object
   of all threads that have entered a debug state.
 *)
{

readStoppedThread :Thread(Void)
{
  _fetchStoppedThread
}

private

_fetchStoppedThread :Thread(Void)
  (* get the next stopped thread.  May wait on _threadStopped for a thread
     to become available. *)
  builtin

_stoppedThread :Thread(Void)
  (* A thread that has been stopped, or nil if currently free.  TVM only. *)

_threadStopped :Condition
  (* A thread has been stopped - _stoppedThread.isNotNil.  TVM only. *)

_threadFetched :Condition
  (* The stopped thread has been fetched - _stoppedThread.isNil.  TVM only. *)

_init :Void
{
  super._init
  _threadStopped := Condition.new
  _threadFetched := Condition.new
}

}
