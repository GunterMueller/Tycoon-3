class TL2ValueVisitor(T <: Void)
super TL2
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta AbstractClass
{
visitLiteral(v :TL2LiteralValue) :T
  (* *)
{ visitDefault(v) }

visitSend(v :TL2SendValue) :T
  (* *)
{ visitDefault(v) }

visitSuperSend(v :TL2SuperSendValue) :T
  (* *)
{ visitSend(v) }

visitAssign(v :TL2AssignValue) :T
  (* *)
{ visitDefault(v) }

visitIde(v :TL2IdeValue) :T
  (* *)
{ visitDefault(v) }

visitTakeFrom(v :TL2TakeFromValue) :T
  (* *)
{ visitIde(v) }

visitFun(v :TL2CompiledFun) :T
  (* *)
{ visitDefault(v) }

visitLet(v :TL2LetValue) :T
  (* *)
{ visitDefault(v) }

visitBlock(v :TL2BlockValue) :T
  (* *)
{ visitDefault(v) }

visitArray(v :TL2ArrayValue) :T
  (* *)
{ visitDefault(v) }

visitDefault(v :TL2Value) :T
  (* *)
{ ; unhandled case 
  assert({ false })
}

}
