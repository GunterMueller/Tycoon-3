class TL2MetaClass
super ConcreteClass(TL2Class)
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *


My instances are themselves classes

Author:  Axel Wienberg
Date:    26-Nov-1996
Updates: (Date)	  (Name)	(Description)
--------------------------------------------------
Note:
  If we were serious about types, this would be
  	TL2MetaClass(C <: TL2Class)
	super ConcreteClass_(C)
	metaclass TL2MetaClass(TL2MetaClass(C))
	...
  Luckily, the type checker allows us to specify
  "metaclass MetaClass" even in subclasses of TL2Class.
*)
meta MetaClass
{
new(state :TL2ClassState, classManager :TL2ClassManager) :TL2Class
  (* *)
{
  instance ::= _new

  ; ### can we somehow use setState? 
  instance.name := state.name
  instance.pos := state.pos
  instance.sourceTime := state.sourceTime
  instance.fingerPrint := state.fingerPrint
  instance.selfTypeSig := state.selfTypeSig
  instance.domain := state.domain
  instance.supers := state.supers
  instance.metaClassDeclaration := state.metaClassDeclaration
  instance.slots := state.slots
  md ::= TL2MethodDictionary.new
  state.methodDictionary.keysAndElementsDo(fun(key :Symbol, m :TL2Method) {
    md[key] := m
  })
  instance.methodDictionary := md
  instance.classManager := classManager
  instance._init
  instance
}

}
