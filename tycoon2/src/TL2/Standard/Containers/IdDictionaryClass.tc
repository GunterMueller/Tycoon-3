class IdDictionaryClass(K <: Object, E <: Object)
super ConcreteClass(IdDictionary(K, E))
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta MetaClass
{
new :IdDictionary(K,E)
  (* *)
{
  new1(0)
}

new1(initialCapacity :Int) :IdDictionary(K,E)
  (* *)
{
  i ::= _new
  i._init1(initialCapacity)
  i
}

new @:IdDictionary(K,E)
{ fetch(new)@ }

new1(initialCapacity :Int) @:IdDictionary(K,E)
{
  fetch(new1(initialCapacity))@
}

}
