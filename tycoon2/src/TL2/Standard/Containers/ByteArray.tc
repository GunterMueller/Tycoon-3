class ByteArray
super MutableArray(Int)
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

Mutable array which can only hold byte values (0..255)

Author:  Andreas Gawecki
Date:    10-Sep-1996
Updates: (Date)	  (Name)	(Description)
*)
meta ByteArrayClass()

{
"[]"(i :Int) :Int
  (* Return the value which is stored at index i *)
builtin

"[]:="(i :Int, e :Int) :Int
  (* *)
builtin

"="(x :Object) :Bool
  (* *)
{
  self == x || x.clazz == ByteArray &&  self.sequenceEqual(_typeCast(x, :ByteArray)) 
}

size :Int
  (* *)
builtin

printHex :Void
  (* *)
{ printHexOn(tycoon.stdout) }

printHexString :String
  (* *)
{ out ::= StringBuilderOutput.new
  printHexOn(out)
  out.contents
}

printHexOn(out :Output) :Void
  (* *)
{
  do(fun(i:Int){
    out.write(Char.digit(i/16).asLowerCase)
    out.write(Char.digit(i%16).asLowerCase)
  })
}

private

}
