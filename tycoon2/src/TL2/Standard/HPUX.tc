class HPUX
super Posix
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

My instance represents the HP-UX operating system

Author:  Marc Weikard
Date:    08-Jan-1997
Derived From: Linux.tc
Updates: (Date)	  (Name)	(Description)
*)
meta SimpleConcreteClass(HPUX)
{
visit(T <: Void, aVisitor :OSVisitor(T)) :T
  (* *)
{
  aVisitor.visitHPUX(self)
}

resolveDLL(dllName :String) :String
  (* *)
{
  name ::= tycoon.os.fs.search(tycoon.ansiC.getenv("LD_LIBRARY_PATH"), dllName)
  if( name.isNotNil then: { name } else: { dllName })
}

SIGUSR1 :Int
  (* User Signal 1 *)
{ 16 }

SIGUSR2 :Int
  (* User Signal 2 *)
{ 17 }

ENOENT :Int
  (* *)
{ 2 }

EINTR :Int
  (* *)
{ 4 }

EIO :Int
  (* *)
{ 5 }

EACCES :Int
  (* *)
{ 13 }

EEXIST :Int
  (* *)
{ 17 }

ENOTDIR :Int
  (* *)
{ 20 }

EISDIR :Int
  (* *)
{ 21 }

ENFILE :Int
  (* *)
{ 23 }

EMFILE :Int
  (* *)
{ 24 }

EFBIG :Int
  (* *)
{ 27 }

ENOSPC :Int
  (* *)
{ 28 }

EROFS :Int
  (* *)
{ 30 }

EMLINK :Int
  (* *)
{ 31 }

EDEADLK :Int
  (* *)
{ 45 }

ENOLCK :Int
  (* *)
{ 46 }

ENOTSUP :Int
  (* *)
{ 252 }

EDQUOT :Int
  (* *)
{ 69 }

ENAMETOOLONG :Int
  (* *)
{ 248 }

EBADFD :Int
  (* *)
{ nil }

ELOOP :Int
  (* not supported *)
{ 249 }

ENOTEMPTY :Int
  (* *)
{ 247 }

SOCK_STREAM :Int
  (* *)
{ 1 }

SOCK_DGRAM :Int
  (* *)
{ 2 }

SOCK_RAW :Int
  (* *)
{ 3 }

}
