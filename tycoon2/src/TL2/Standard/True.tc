class True
super Bool
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

Methods for true,  the single instance of this class

Author:  Andreas Gawecki
Date:    01-Mar-1995
Updates: (Date)	  (Name)	(Description)

*)
meta OddballClass
{
case(T <: Void, ifTrue :Fun():T,  :Fun():T) :T
  (*ifFalse*)
{
  ifTrue[]
}

case(T <: Void, ifTrue :Fun()@:T,  :Fun()@:T) @:T
  (*ifFalse*)
{
  ifTrue[]@
}

"!" :Bool
  (* *)
{
  false
  }

"&"(aBool :Bool) :Bool
  (* *)
{
  aBool
  }

"|"( :Bool) :Bool
  (*aBool*)
{
  self	; equals true 
  }

"^"(aBool :Bool) :Bool
  (* *)
{
  !aBool
}

"&&"(ifTrue :Fun():Bool) :Bool
  (* *)
{
  ifTrue[]
  }

"||"( :Fun():Bool) :Bool
  (*ifFalse*)
{
  self	; equals true 
  }

"?"(ifTrue :Fun():Void) :Void
  (* old syntax *)
{
  ifTrue[]
  }

"?:"(T <: Void, ifTrue :Fun():T,  :Fun():T) :T
  (*ifFalse
 old syntax *)
{
  ifTrue[]
  }

"=>=>"(ifTrue :Fun():Bool) :Bool
  (* old syntax *)
{
  ifTrue[] ; a => b means : (a & b) | !a 
  }

"=>"(aBool :Bool) :Bool
  (* old syntax *)
{
  aBool ; a => b means : (a & b) | !a 
  }

printString :String
  (* *)
{
  "true"
  }

}
