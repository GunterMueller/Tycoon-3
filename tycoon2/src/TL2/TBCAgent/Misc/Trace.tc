class Trace
super Object
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 Trace.tc

   Tycoon Business Conversations (TBC) for Tycoon 2
   ------------------------------------------------
   Trace utility class for TBC. Usage: inherit this class or use it as slot,
   and enable tracing by "traceOn" or disable by "traceOff".
   Trace-Messages may be generated by "trace"().  If tracing is enabled, they 
   will be output on tycoon.stdout, otherwise not.  A Prefix which is output 
   before every line can be specified by "traceInit" and defaults to the 
   classname of self.
   
   22.09.97 hw : created
   10.10.97 hw : added :Global flags
   29.10.97 hw : made trace a concrete class (for threads)
   
*)
meta SimpleConcreteClass(Trace)
{

traceOn():Void
  (* *)
{
  _trace := true
}

traceOff():Void
  (* *)
{
  _trace := false
}

trace(msg :String):Void
  (* *)
{
  if( ((_trace | Global.instance.mustTrace) & !Global.instance.dontTrace) then:
  {
    Global.instance.outputMutex.withLock({
      tycoon.stdout << _prefix << msg << "\n"
    })
  })
}

traceInit(prefix :String) :Void
  (* *)
{
  _prefix := prefix + ": "
}

private

_trace :Bool

_prefix :String

_init :Void
  (* *)
{
  super._init
  _trace  := Global.instance.defaultTrace
  _prefix := self.clazz.name + ": "
}

}
