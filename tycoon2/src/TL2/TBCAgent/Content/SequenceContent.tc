class SequenceContent
super Content, GapArray(Content)
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 SequenceContent.tc

   Tycoon Business Conversation (TBC) for Tycoon 2 
   -----------------------------------------------
   Content for sequences.  A sequence is a aggregation of contents of a 
   uniform type. This is implemented by inheritance from GapArray.
  
   17.08.97 hw : created
   
*)
meta SequenceContentClass
{

spec :SequenceContentSpec
{
  _spec
}

seq() :SequenceContent
  (* *)
{
  self
}

visit(v :ContentVisitor) :Void
  (* *)
{
  v.sequenceContent(self)
}

"[]:="(i :Int, c :Content) :Content
  (* Override []:= to avoid accidently setting elements of wrong spec.
     if tried to, an exception of type SpecError is raised.
   *)
{
  if( spec.matches(c.spec) then: {
    super."[]:="(i, c)
  } else: {
    SpecError.new(c, spec).raise
  })
}

private

_spec :SequenceContentSpec

}
