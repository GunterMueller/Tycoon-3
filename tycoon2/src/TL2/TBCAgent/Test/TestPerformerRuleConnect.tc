class TestPerformerRuleConnect
super PerformerRule(TestPerformerSession), Trace
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 TestPerformerRuleConnect.tc

   Tycoon Business Conversations (TBC) for Tycoon 2
   ------------------------------------------------
   Sample performer rule: Handle request "Connect" from dialog "Login".
   This rule makes also use of the typed session-variable TestPerformerSession.
   
   22.09.97 hw : created
   10.11.97 hw : TestPerformerSession
   
*)
meta SimpleConcreteClass(TestPerformerRuleConnect)
{
transition(conv: Conversation(TestPerformerSession), dialog :Dialog, request :String) :Dialog
  (* *)
{ 
    ; create next dialog. it is alos the final dialog. 
    d:Dialog := conv.newDialog("Ciao")
    
    trace("Login Name=" +
           dialog.content["Name"].str +
          " Password=" +
           dialog.content["Password"].str)

    d.content["Message"].str:=
      if( (dialog.content["Name"].str = "Holm")
        then: {"You logged in with Password "+dialog.content["Password"].str}
        else: {"Failed to log in."})
        
    ; remember user. 
    conv.s.user := dialog.content["Name"].str
    
    d

  }

}
