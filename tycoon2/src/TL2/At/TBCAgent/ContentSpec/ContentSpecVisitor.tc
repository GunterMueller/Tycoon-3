class ContentSpecVisitor
super Object
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 ContentSpecVisitor.tc

   Tycoon Business Conversations (TBC) for Tycoon 2
   ------------------------------------------------
   This is the abstract root-class for all ContentSpec-visitor-classes.

   09.08.97 hw : created
   01.11.97 hw : added "currencyContentSpec"
   03.03.98 hw : added .*SpecContentSpec
   
*)
meta AbstractClass
{
boolContentSpec(spec :BoolContentSpec) :Void
  (* *)
deferred

dateContentSpec(spec :DateContentSpec) :Void
  (* *)
deferred

intContentSpec(spec :IntContentSpec) :Void
  (* *)
deferred

realContentSpec(spec :RealContentSpec) :Void
  (* *)
deferred

stringContentSpec(spec :StringContentSpec) :Void
  (* *)
deferred

currencyContentSpec(spec :CurrencyContentSpec) :Void
  (* *)
deferred

convSpecContentSpec(spec :ConvSpecContentSpec) :Void
  (* *)
deferred

dialogSpecContentSpec(spec :DialogSpecContentSpec) :Void
  (* *)
deferred

contentSpecContentSpec(spec :ContentSpecContentSpec) :Void
  (* *)
deferred

recordContentSpec(spec :RecordContentSpec) :Void
  (* *)
deferred

variantContentSpec(spec :VariantContentSpec) :Void
  (* *)
deferred

singleChoiceContentSpec(spec :SingleChoiceContentSpec) :Void
  (* *)
deferred

multipleChoiceContentSpec(spec :MultipleChoiceContentSpec) :Void
  (* *)
deferred

sequenceContentSpec(spec :SequenceContentSpec) :Void
  (* *)
deferred

}
