class Global
super Object
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 Global.tc

   Tycoon Business Conversation (TBC) for Tycoon 2
   -----------------------------------------------
   Maintain global flags by a singleton.
   
   10.10.97 hw : created
   
*)
meta SingletonClass(Global)
{

defaultTrace :True
  (* Default setting for new objects trace status:
     Force all objects to trace, if true. *)

mustTrace :Bool
  (* Default setting for new objects trace status:
     Force all objects to suppress trace, if true. *)

dontTrace :Bool

uniqueNumber :Int
  (* A utility to create unique, nonrepeating numbers. *)
{
  _uniqueNumberMutex.withLock({
    _uniqueNumber:=_uniqueNumber+1
    _uniqueNumber
  })
}

outputMutex :Mutex
  (* To avoid messy screen output, trace has to hold this Mutex while
     writing to tycoon.stdout. *)
{
  _outputMutex
}

private

_uniqueNumber :Int

_uniqueNumberMutex :Mutex

_outputMutex :Mutex

_init :Void
  (* *)
{
  super._init
  defaultTrace := false
  mustTrace    := false
  dontTrace    := false
  _uniqueNumberMutex := Mutex.new
  _outputMutex := Mutex.new
  _uniqueNumber := 0 ; start at 1 
}

}
