class RequestSpec
super NameIndex(DialogSpec), NamedMixin
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 RequestSpec.tc

   Tycoon Business Conversation (TBC) for Tycoon 2
   -----------------------------------------------
   Specification of requests.  Each request-spec (which are aggregated in 
   dialog-specs by a dictionary) has a list of possible replies, ie.  
   dialog-specs.  This is implemented by being dictionary by inheritance.  
   The name of a request-spec can only be retrieved from the dictionary 
   containing it, ie. the dialog-spec.

   13.08.97 hw : created
   
*)
meta RequestSpecClass
{

visit(v :TBCSpecVisitor) :Void
  (* *)
{
  v.requestSpec(self)
}

matches(other :RequestSpec) :Bool
  (* Return true iff the other RequestSpec matches ourself.

     self is the spec requested by the customer (old),
     other is the spec implemented by the performer (new). *)
{
  other.keys.all(fun(k :String){includesKey(k)})
}

}
