class RecordContent
super ConcreteContent(RecordContentSpec), AtDictionary(String, Content)
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 RecordContent.tc

   Tycoon Business Conversation (TBC) for Tycoon 2
   -----------------------------------------------
   Record-type content class, implemented as dictionary. All methods operating 
   on elements of the Record are inherited from Dictionary, eg. access to 
   members is granted via "[]" and "[]:=".

   09.08.97 hw : created
   14.08.97 hw : _allowChange
   
*)
meta RecordContentClass
{

rec() :RecordContent
  (* *)
{
  self
}

visit(v :ContentVisitor) :Void
  (* *)
{
  v.recordContent(self)
}

"[]:="(name :String, newContent @:Content) :Void
  (* Overridden to prevent assignment of a non-matching content. *)
{
  if( (spec.includesKey(name) && spec[name].matches(newContent.spec)) then: {
    super."[]:="(name, newContent@)
  } else: {
    SpecError.new(newContent, spec).raise
  })
}

private

}
