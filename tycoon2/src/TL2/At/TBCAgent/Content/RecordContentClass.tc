class RecordContentClass
super ConcreteClass(RecordContent)
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 RecordContentClass.tc

   Tycoon Business Conversation (TBC) for Tycoon 2
   -----------------------------------------------
   Metaclass for RecordContent. Here the new-method is responsible for 
   creating all record-member-instances specified by the RecordContentSpec.
   Using the "instance"()-method of the spec ensures complete creation of 
   nested structures, ie. an subtree of the entire content.

   09.08.97 hw : created
   14.08.97 hw : introduced finalize
   21.09.97 hw : .. and removed.
   
*)
meta MetaClass
{

new(aRSpec :RecordContentSpec)@: RecordContent
  (* *)
{
  inst @::= _new@

  inst._init  
  inst._init1(aRSpec.size)   ; see DictionaryClass! defaultsize 

  inst._spec := aRSpec

  ;; insert all specified record-members
  aRSpec.keysAndElementsDo(
    fun(name :String, cs :ContentSpec) :Void {
      inst[name] := cs.instance@
    })

  inst@
}

}
