class PerformerRule(S<:Void)
super AgentRule
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 PerformerRule.tc

   Tycoon Business Conversations (TBC) for Tycoon 2
   ------------------------------------------------
   Abstract superclass for performer-rules.  In its subclasses the 
   performer-side of rules to execute a TBC is to be implemented.  For each 
   possible transition a rule has to be registered at the related PerformerRole.  
   Therfore, a method 'transistion' exists, which must be overridden to 
   implement the decision.
   'transition' is called with the Dialog returned by the customer (so the 
   entered or altered contents may be inspected) and the request choosen by the 
   customer. 'transition' must return the following dialog, a 'Dialog' 
   instance. This way, is is able to fill its contents accordingly to its neads.
   Furthermore, to keep track of the session, 'transition' is passed the current 
   Conversation.
   
   20.08.97 hw : created
   10.11.97 hw : introduced :S
   
*)
meta AbstractClass
{

transition(conv: Conversation(S), dialog :Dialog, request: String) @:Dialog
  (* *)
deferred

}
