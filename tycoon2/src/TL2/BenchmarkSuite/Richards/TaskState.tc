class TaskState
super Object
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 "Richards" benchmark: ported from C++ to TL-2 *)
meta TaskStateClass(TaskState)
{
packetPending :Bool

taskWaiting   :Bool

taskHolding   :Bool

setPacketPending() :Void
  (* *)
{
  packetPending := true
  taskWaiting := false
  taskHolding := false
}

setWaiting() :Void
  (* *)
{
  packetPending := false
  taskWaiting := true
  taskHolding := false
}

setRunning() :Void
  (* *)
{
  packetPending := false
  taskWaiting := false
  taskHolding := false
}

setWaitingWithPacket() :Void
  (* *)
{
  packetPending := true
  taskWaiting := true
  taskHolding := false
}

isPacketPending() :Bool
  (* not needed in TL-2 but is nicer to read: *)
{ packetPending }

isTaskWaiting() :Bool
  (* *)
{ taskWaiting }

isTaskHolding() :Bool
  (* *)
{ taskHolding }

isRunning() :Bool
  (* *)
{!packetPending & !taskWaiting & !taskHolding }

isWaiting() :Bool
  (* *)
{!packetPending & taskWaiting & !taskHolding }

isWaitingWithPacket() :Bool
  (* *)
{ packetPending & taskWaiting & !taskHolding }

isTaskHoldingOrWaiting() :Bool
  (* *)
{taskHolding | (!packetPending  & taskWaiting)}

}
