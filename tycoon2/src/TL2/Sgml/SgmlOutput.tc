class SgmlOutput
super Sgml, Output
metaclass AbstractClass
public methods

(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 DTD *)

(* Generic identifier <id> has content type <contentType>.
   defaultAttributeValues contains an entry for each attribute with a default
   value. *)
defineElement( id :String, contentType :SgmlContentType,
	       defaultAttributeValues :Dictionary(String, String))
  deferred

(* document instance *)

(* we have encountered a start tag for generic identifier <id>.
   <id> appeared earlier in an elementDefinition.
   <attributes> contains all explicitly given or current attributes. *)
startElement(id :String, attributes :Dictionary(String, String))
  deferred

(* ...inherited output methods... *)
  
(* closing bracket to startElement *)
endElement(id :String)
  deferred


(* Is this SgmlOutput interested in receiving "path:=" and "lineNumber:="
   messages? Must remain constant for the duration of each parse. *)
interestedInPosition :Bool
  deferred

(* update source position: next output will come from file <path> / line <lineno>
   interested subclasses have to keep track of line numbers in character data themselves *)

"path:="(path :String)
  require interestedInPosition
  deferred

"lineNumber:="(lineNumber :Int)
  require interestedInPosition
  deferred

(* Is this SgmlOutput interested in receiving "comment" messages?
   Must remain constant for the duration of each parse. *)
interestedInComments :Bool
  deferred

comment(comment :String)
  deferred
;
