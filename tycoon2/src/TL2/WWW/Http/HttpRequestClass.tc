class HttpRequestClass
super ConcreteClass(HttpRequest)
(**)
meta MetaClass
{
new :HttpRequest
  (*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 ------------------------------------------------------------ *)
{ new6(nil, nil, 1, 1, MimeHeaderDictionary.new, nil) }

new6(method :String,
     uri :String,
     major :Int,
     minor :Int,
     headers :MimeHeaderDictionary(MimeHeaderValue),
     body :Input
    ) :HttpRequest
  (* ------------------------------------------------------------ *)
require headers.isNotNil    
  
 { _new._init6(method, uri, major, minor, headers, body) }

init :Void
  (* ------------------------------------------------------------ *)
{
    MimeHeaderRegistry.instance.registerHeader("accept", AcceptListHeader)
    MimeHeaderRegistry.instance.registerHeader("if-modified-since", MimeDate)
    MimeHeaderRegistry.instance.registerHeader("cookie", HttpCookiesHeader)
    MimeHeaderRegistry.instance.registerHeader("authorization", HttpCredentialsHeader)
    MimeHeaderRegistry.instance.registerHeader("user-agent", HttpProductListHeader)
    MimeHeaderRegistry.instance.registerHeader("x-cgi2tl-remote-addr", IPAddressHeader)
    MimeHeaderRegistry.instance.registerHeader("x-cgi2tl-remote-host", MimeString)
  }

}
