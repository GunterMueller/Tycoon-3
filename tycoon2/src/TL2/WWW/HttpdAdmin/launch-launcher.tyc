(*
  Launch tyhttpd-launcher
*)


(* Create Web Server Object and configure: *)
define tyhttpd :Httpd;
tyhttpd := Httpd.new;
tyhttpd.home := tycoon.hoxHome + "/tyhttpd/tyhttpd-launcher";
tyhttpd.configure;


(* Create STML resource factories: *)
define httpdLauncherApplication :HttpdLauncherApplication;
httpdLauncherApplication := HttpdLauncherApplication.new
(*
httpdLauncherApplication.compiler.verbose := true
*)
resourceFactory ::= HttpFunResourceFactory.new
resourceFactory.generators["jump"] :=
  fun(file:File){
    JumpResource.new(file)
  }
resourceFactory.generators["stml"] :=
  fun(file:File){
    StmlResource.new(httpdLauncherApplication, file)
  }
dir ::= tyhttpd.root.lookupDirectory(EmptyList.new)
dir.resourceFactory := resourceFactory;

define httpdAdminApplication :HttpdAdminApplication;
httpdAdminApplication := HttpdAdminApplication.new
httpdAdminApplication.compiler.verbose := true
(*
*)
resourceFactory ::= HttpFunResourceFactory.new
resourceFactory.generators["stml"] :=
  fun(file:File){
    StmlResource.new(httpdAdminApplication, file)
  }
dir ::= tyhttpd.root.lookupDirectory(List.with1("admin"))
dir.resourceFactory := resourceFactory;


(* Notnagel: Stop it. *)
tyhttpd.root.lookupDirectory(EmptyList.new)["stop"] := HttpShutdownResource.new(tyhttpd);


;;
;; end of automated script
;;

(*
  Authentication Stuff (does it still work?):
*)

authRoot ::= HttpAuthenticatedResource.new
authRoot.resource := root
authRoot.install
realm ::= BasicProtectionRealm.new("HoxIntern")
realm.acl["mernst"] := "hackenklacken"
authRoot.realm := realm
tyhttpd.root := HttpDebugResource.new(authRoot);

