class HttpFunResourceFactory
super HttpResourceFactory
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 my instances provide a flexible mapping of file extenstions to HTTP resources *)
meta SimpleConcreteClass(HttpFunResourceFactory)
{
generators :Dictionary(String, Fun(:File):HttpFileResource)

newFileResource(file :File) :HttpResource
  (* create a new file resource with the given name in the given directory *)
{
  ext ::= fs.pathExtension(file.path)
  generators.lookup(ext,
    fun(gen :Fun(:File):HttpFileResource) { gen[file] },
    fun() { nil } ; let another resource factory do the job 
  )
}

private

_init :Void
  (* *)
{
  generators := Dictionary.new
  super._init
}

}
