class MimeFactory
super HttpResourceFactory
(**)
meta MimeFactoryClass()

{
types :Dictionary(String, MediaType)

encodings :Dictionary(String, String)

defaultType :MediaType

newFileResource(file :File) :HttpResource
  (* *)
{
  contentEncoding :String := nil
  ext ::= fs.pathExtension(file.path)
  if( ext.isNotNil then: {
    if( encodings.includesKey(ext) then: {
      contentEncoding := encodings[ext]
      ext := fs.pathExtension(fs.pathPrefix(file.path))
    })
  })
  if( ext.isNil then: { ext := "" })
  type ::= types.lookup(ext,
    fun(type :MediaType) { type },
    fun() { defaultType}
  )
  resource ::= HttpFileResource.new2(file, type)
  
  resource.contentEncoding := contentEncoding
  resource
}

newDirectoryResource(dir :Directory) :HttpResource
  (*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 create a new directory resource with the given name in the given directory *)
{
  HttpDirectoryResource.new(dir)
}

private

_init :Void
  (* *)
{
  types := Dictionary.new
  encodings := Dictionary.new
  defaultType := MediaType.TEXT_PLAIN
  
  ; register some well known media types and content encodings: 
  types["html"] := types["htm"] := MediaType.TEXT_HTML
  types["ps"] := MediaType.APPLICATION_POSTSCRIPT
  types["gif"] := MediaType.IMAGE_GIF
  types["jpeg"] := types["jpg"] := MediaType.IMAGE_JPEG  
  
  encodings["Z"] := nil ;##
  
  super._init
}

}
