class BasicProtectionRealm
super ProtectionRealm
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 Server-side information about the protection of a realm

   Matthias Ernst 27.1.97

   A BasicProtectionRealm is protected by the Http Basic
   authentification scheme.
*)
meta BasicProtectionRealmClass()

{
acl :Dictionary(String, String)
  (* user -> passwd *)
{ _acl }

challenges(forURL :URL) :List(WWWAuthenticate)
  (* the challenges for an unauthenticated client *)
{
    List.with1(WWWAuthenticate.basic(name))
  }

authenticates(request :HttpRequest) :Bool
  (* Does the included authentification authentify the client ? *)
{
    request.hasAuthorization && (
      cred ::= request.authorization

      tolower(cred.scheme) = "basic" && (
        user ::= cred.parameters["user"]
	passwd ::= cred.parameters["password"]

	acl.includesKey(user) &&  acl[user] = passwd 
      )
    )
  }

private

_acl :Dictionary(String, String)

_init1(name :String) :Void
  (* *)
{
    super._init1(name)
    _acl := Dictionary.new
  }

tolower(s :String) :String
  (* *)
{
    String.fromReader(s.map(fun(c :Char) { c.asLowerCase }))
  }

}
