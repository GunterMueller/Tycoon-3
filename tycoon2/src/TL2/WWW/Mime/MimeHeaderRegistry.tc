class MimeHeaderRegistry
super MimeHeaderDictionary(MimeHeaderValueClass)
metaclass SingletonClass(MimeHeaderRegistry)

public methods

newHeaderValue(name :String) :MimeHeaderValue
  {
    let var clazz :MimeHeaderValueClass = nil,
    lookup(name,
      fun(c :MimeHeaderValueClass) { clazz := c },
      fun(){ clazz := defaultHeader }
    ),
    clazz.new
  }

registerHeader(name :String, clazz :MimeHeaderValueClass)
  { self[name] := clazz }

unregisterHeader(name :String)
  { removeKey(name) }

  
private methods

defaultHeader :MimeHeaderValueClass
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 A header with unknown name is parsed into a MimeString *)
  { MimeString }

;

  
