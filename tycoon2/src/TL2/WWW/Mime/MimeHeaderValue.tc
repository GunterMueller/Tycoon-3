class MimeHeaderValue
super Mime
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 MIME headers

   Author: Matthias Ernst, Andreas Gawecki
   Date  : 9.12.96
   Changes : me   6.1.97   separate class+metaclass, name change


 Abstract Superclass of all header values
   
   value can be retrieved as an Object (need that ?)
   get and set based on Strings
*)
meta AbstractClass
{
value: Object
  (* *)
deferred

string: String
  (* *)
deferred

"string:="(:String) :Void
  (* *)
deferred

valueAs(T <: Object) :T
  (* unsafe typecast *)
{
  _typeCast(value, :T)
}

printOn(o :Output) :Void
  (* *)
{
  o.writeAll(self."class".name)
  if( string != nil then: {
    o.write('(')
    string.printOn(o)
    o.write(')')
  })
}

}
