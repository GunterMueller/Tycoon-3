class Base64Encoder
super Encoder
metaclass ConcreteEncoderClass(Base64Encoder)

public methods

read :Char
{
  atEnd ? fun() :Char { nil } : {
  (*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 not all consumed *)
  charCount < available ? {
    charCount := charCount + 1,
    first6
  } : {
    (* consumed full 24 bit *)
    charCount = 4 ? {
      charCount := 0,
      buf := 0,
      available := 0,
    
      let c1 = _in.read,
      c1 != nil ? { available := 2, buf := c1.asInt << 16,
        let c2 = _in.read,
        c2 != nil ? { available := 3, buf := buf + (c2.asInt << 8),
          let c3 = _in.read,
	  c3 != nil ? { available := 4, buf := buf + c3.asInt }
        }
      },

      available > 0 ? { charCount := charCount + 1, first6 } : { atEnd := true, nil }
    } : {
      charCount < 4 ? { charCount := charCount + 1, '=' } : { atEnd := true, nil }
    }
  }
  }
}

private

buf :Int,
available :Int,
charCount :Int,
atEnd :Bool

methods

first6 :Char
{
  let sextet = (buf & 16515072) >> 18,
  
  buf := (buf & 262143) << 6,

  "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[sextet]
}

_init1(i :Input)
{
  super._init1(i),

  charCount := 4, (* as if we had just consumed the buffer *)
  available := 0,
  buf := 0,
  atEnd := false
}
  
;

