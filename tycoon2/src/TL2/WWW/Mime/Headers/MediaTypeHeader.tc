class MediaTypeHeader
super MimeHeaderValueImpl(MediaType)
metaclass MimeHeaderValueImplClass(MediaType)

private methods

parseValue(s :String) :MediaType {
  let var type :String = nil,
  let var subtype :String = nil,
  let parser = MimeParser.new(s.reader),

  type := parser.nextToken,
  parser.skip('/'),
  subtype := parser.nextToken,

  try({
    parser.skiphws,
    parser.skip(';'),
    parser.skiphws,
    let parameterName = parser.nextToken,
    parser.skip('='),
    let parameterValue = parser.nextWord,
    MediaType.withParameter(type, subtype, parameterName, parameterValue)
    },
    fun (e :Exception) {
      MediaType.new(type, subtype)
    }      
  )
}

unparseValue(t :MediaType) :String {
  let out = StringBuilderOutput.new,
  out << t.type + "/" + t.subtype,
  t.parameters.isNotNil ?
  {
    t.parameters.keysAndElementsDo(
      fun(k :String, e:String) {out << "; " << k << "=" << e})
  },
  out.contents
}

;
