class MediaTypeHeader
super MimeHeaderValueImpl(MediaType)
(**)
meta MimeHeaderValueImplClass(MediaType)
{
private

parseValue(s :String) :MediaType
  (* *)
{
  type :String := nil
  subtype :String := nil
  parser ::= MimeParser.new(s.reader)

  type := parser.nextToken
  parser.skip('/')
  subtype := parser.nextToken

  try({
    parser.skiphws
    parser.skip(';')
    parser.skiphws
    parameterName ::= parser.nextToken
    parser.skip('=')
    parameterValue ::= parser.nextWord
    MediaType.withParameter(type, subtype, parameterName, parameterValue)
    } else:
    fun (e :Exception) {
      MediaType.new(type, subtype)
    }      
  )
}

unparseValue(t :MediaType) :String
  (* *)
{
  out ::= StringBuilderOutput.new
  out << t.type + "/" + t.subtype
  if( t.parameters.isNotNil then:
  {
    t.parameters.keysAndElementsDo(
      fun(k :String, e:String) {out << "; " << k << "=" << e})
  })
  out.contents
}

}
