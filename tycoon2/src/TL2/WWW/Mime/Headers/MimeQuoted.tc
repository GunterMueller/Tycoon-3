class MimeQuoted
super MimeHeaderValueImpl(String)
(**)
meta MimeHeaderValueImplClass(String)
{
private

parseValue(s: String): String
  (* *)
{
  p ::= MimeParser.new(s.reader)
  p.skiphws
  p.nextUnquoted
}

unparseValue(s: String): String
  (* *)
{
  result ::= GapString.new(10)  ;
; * This file is part of the Tycoon-2 system.
; *
; * The Tycoon-2 system is free software; you can redistribute it and/or
; * modify it under the terms of the GNU General Public License
; * as published by the Free Software Foundation (Version 2).
; *
; * The Tycoon-2 system is distributed in the hope that it will be useful,
; * but WITHOUT ANY WARRANTY; without even the implied warranty
; * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
; * See the GNU General Public License for more details.
; * 
; * You should have received a copy of the GNU General Public
; * License along with the Tycoon-2 system; see the file LICENSE.
; * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
; * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
; * 
; * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
; *
; should use StringBuilderOutput 

  result.add('\"')
  s.reader.do(fun(c :Char) {
    if( c = '\"' then: { result.addAll("\\\"") } else: {
    if( c = '\\' then: { result.addAll("\\\\") } else: {
    result.add(c) }) })
  })

  result.add('\"')
  result.asString
}

}
