class StmlWhiteStringType
super StmlType
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta StmlSimpleTypeClass(StmlWhiteStringType)
{
printOn(out :Output) :Void
  (* *)
{ out.writeString("WhiteString") }

equalType(t :StmlType) :Bool
  (* *)
{ t.equalWhiteStringType(self) }

equalWhiteStringType(t :StmlStringType) :Bool
  (* *)
{ true }

before(t :StmlType) :StmlType
  (* *)
{ t.afterWhiteString(self) }

afterFun(t :StmlFunType) :StmlType
  (* *)
{
  t  ; ! 
}

afterString(t :StmlStringType) :StmlType
  (* *)
{
  t
}

afterWhiteString(t :StmlWhiteStringType) :StmlType
  (* *)
{
  self
}

afterTypeVariable(t :StmlTypeVariable) :StmlType
  (* *)
require !t.isBound
{
  t
}

afterBottom(t :StmlBottomType) :StmlType
  (* *)
{
  self
}

isSubTypeOf(t :StmlType) :Bool
  (* *)
{ t.isSuperTypeOfWhiteString(self) }

isSuperTypeOfFun(t :StmlFunType) :Bool
  (* *)
{ false }

isSuperTypeOfString(t :StmlStringType) :Bool
  (* *)
{ false }

isSuperTypeOfWhiteString(t :StmlWhiteStringType) :Bool
  (* *)
{ true }

isStringContext :Bool
  (* *)
{ true }

}
