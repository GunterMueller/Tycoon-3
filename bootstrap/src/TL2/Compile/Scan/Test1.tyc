tycoon.tl.loader.registerDirectory("Compile/Scan/Lazy");
tycoon.tl.loader.update;
DO load "Compile/Scan/Lazy/Init.tyc";

define sg :ScannerBuilder(String, Void);

sg := LazyScannerBuilder.new;

sg.acceptable := fun(ch :Char) { let i = ch.asInt, i <= 255 };

sg.addToken("%% *[0-9]+ *% *[^%]* *%[A-Za-z0-9]+%([^%]|%[^%])*",
 fun(s :Scanner(String)) {
   s.token });

sg.addToken(" |[^ ]",
 fun(s :Scanner(String)) {
   s.token
   });
   
define s :ScannerTables(String);
let t = Timer.new(tycoon.cpuClock),
t.start,
s := sg.generate,
t.stop,
t;


let t = Timer.new(tycoon.cpuClock),
t.start,
let f = File.openRead("/local/tw/gbremer/twl/hox/hha/txt/2004onl.txt"),
let scanner = Scanner.new(s, f),
scanner.do(fun(s :String) {
  tycoon.stdout.write('.')
}),
f.close,
t.stop,
t;



ULTRA SPARC

Alte Maschine: 
0:2:27.620.000
0:1:31.950.000 (neuer scanner)

Neue Maschine, mit assert:
0:3:51.810.000

Neue Maschine, ohne assert, optimiert, gcc:
0:1:1.810.000
fully threaded
0:0:59.550.000

SPARC 4

Alte Maschine: 
0:5:57.510.000

Neue Maschine, ohne assert, optimiert, gcc:
0:1:51.330.000
fully threaded
0:1:26.890.000

SPARC 5

Alte Maschine: 
0:3:41.630.000

Neue Maschine, ohne assert, optimiert, gcc:
0:1:10.350.000
fully threaded
0:0:57.100.000
