class X_TL2SelectorClass
super CStructClass(X_TL2Selector)
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta MetaClass
{
new(symbol :Symbol, sorts :Sequence(Bool), keywords :Array(Symbol)) :X_TL2Selector
  (* *)
{
  new1(symbol, sorts.size,
    sorts.reverseReader.inject(0,fun(i:Int,b:Bool) {
      i*2 + if(b then:{1} else:{0})
    }),
    keywords)
}

new1(symbol :Symbol, arity :Int, sorts :Int, keywords :Array(Symbol)) :X_TL2Selector
{
  instance ::= _new
  assert({ arity >= 0 & arity < 256 })
  assert({ arity >= keywords.size })
  instance.symbol := symbol
  instance.arity := arity
  instance.sorts := sorts
  instance.keywords := keywords
  instance._init
  instance
}

checkKeywords(keywords :Array(Symbol), pos :SourcePos, compiler :X_TL2Compiler) :Array(Symbol)
{
  if( !keywords.isEmpty then: { 
    ;; check for duplicates
    keywordSet ::= keywords.as(Set)
    if( keywordSet.size != keywords.size then: {
      keywordSet.do(fun(s:Symbol) {
	if( keywords.occurrencesOf(s) > 1 then: {
	  compiler.errorLog.error(pos, "repeated keyword: "+s)
	})
      })
    })
    ;; check for TVM limit
    maxKeywords ::= compiler.vmInterface.maxKeywords
    if( keywords.size > maxKeywords then: {
      compiler.errorLog.error(pos, "implementation restriction: no more than "+maxKeywords.printString+" keywords allowed in call or signature")
    })
  })
  keywords
}
}
