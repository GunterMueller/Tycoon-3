class X_TL2WhileGenerator
super X_TL2CodeGenerator
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta X_TL2WhileGeneratorClass
{
condition :X_TL2Value

body :X_TL2Value

genCodeIgnore(backEnd :X_BEMethodManager) :Void
  (* *)
{
    condL ::= backEnd.newLabel
    loopL ::= backEnd.newLabel

    loopSp ::= backEnd.sp
    backEnd.jump(condL)
    ; assume the loop body is always reached 
    backEnd.sp := loopSp
    backEnd.defineLabel(loopL)
    backEnd.sync
    body.genCodeIgnore(backEnd)
    backEnd.defineLabel(condL)
    condition.genCodeBranch(backEnd, loopL, true)
    ; assume the loop terminates 
    backEnd.sp := loopSp
}

genCode(backEnd :X_BEMethodManager) :Void
  (* *)
{
  genCodeIgnore(backEnd)
  backEnd.loadLiteral(nil)
}

isComponent :Bool
{ false }
}
