class X_TL2TypeManager
super X_TL2
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta X_TL2TypeManagerClass
{
isDefined(name :String) :Bool
  (* *)
{
  _signatures.includesKey(name)
}

newClassSignature(name :String) :X_TL2TypeIde
  (* *)
{
  _signatures.memoize(name, { 
    X_TL2TypeIde.new(nil, name, X_TL2VoidType.instance)
  })
}

signature(name :String) :X_TL2TypeIde
  (* *)
{
  assert({ _signatures.includesKey(name) })

  _signatures[name]
}

signatures :KeyedContainer(String, X_TL2TypeIde)
  (* *)
{ _signatures }

private

_signatures :Dictionary(String, X_TL2TypeIde)

  (* LetTypeIde *)

_root :X_TL2Root
  (* for initialization *)

_init :Void
  (* *)
{ super._init
  _signatures := Dictionary.new

  _root.classes.do(fun(c :X_TL2ClassPublic) {
    _signatures[c.name] := c.typeIde
  })
  
  self
}

}
