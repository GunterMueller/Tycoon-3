class X_TL2TakeFromValue
super X_TL2IdeValue
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 *)
meta X_TL2TakeFromValueClass
{
isComponent :Bool
{ true }

accept(T <: Void, v :X_TL2ValueVisitor(T)) :T
  (* *)
{ v.visitTakeFrom(self) }

prettyPrint(out :Printer) :Void
  (* *)
{
  super.prettyPrint(out)
  out.write('@')
}

scope(env :X_TL2Scoper) :X_TL2Value
{
  result ::= super.scope(env)
  if( result == self then: {
    ;; bound locally
    if( !ide.component then: {
      env.errorLog.error(pos, "take from non-component variable "+ide.name)
    })
  })
  result
}

;; code generation...

genCode(backEnd :X_BEMethodManager) :Void
  (* *)
{ backEnd.takeFrom(ide)
}

private

selectorEquivalent :String
{ ide.name+"@" }

}
