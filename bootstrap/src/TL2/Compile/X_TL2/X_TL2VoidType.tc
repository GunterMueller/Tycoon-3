class X_TL2VoidType
super X_TL2ObjectType, X_TL2LeafMixin
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta SingletonClass(X_TL2VoidType)
{
accept(T <: Void, visitor :X_TL2TypeVisitor(T)) :T
  (* *)
{
    visitor.visitVoidType(self)
  }

reduce(T <: Void, s :X_TL2Subst, cont: Fun(:X_TL2Type, :X_TL2Subst):T) :T
  (* *)
{
    cont[self, X_TL2EmptySubst.instance]
  }

selfTypeSig :X_TL2TypeIde
  (* *)
{ _selfTypeSig }

lookupWithSelf(T <: Void,
		 selector :Symbol,
		 subst :X_TL2Subst,
		 withPrivate :Bool,
		 selfType :X_TL2Type,
		 selfTypeSubst :X_TL2Subst,
		 cont :Fun(:X_TL2Method, :X_TL2Subst):T) :T
  (* *)
{
    raiseError
  }

methodsWithSelfDo(subst :X_TL2Subst,
		    withPrivate :Bool,
		    selfType :X_TL2Type,
		    selfTypeSubst :X_TL2Subst,
	            callback :Fun(:X_TL2Method, :X_TL2Subst):Void) :Void
  (* *)
{
    ; ready or not, here I come 
  }

doExpose(T <: Void, subst :X_TL2Subst, exact :Bool, cont :Fun(:X_TL2Type, :X_TL2Subst):T) :T
  (* *)
{
    cont[self, subst]
  }

prettyPrint(out :Output) :Void
  (* *)
{
    out.writeAll("Void")
  }

charCode :Char
  (* *)
{ nil }

resultCharCode :Char
  (* *)
{ 'V' }

private

_selfTypeSig :X_TL2TypeIde

_init :Void
  (* *)
{ super._init
    _selfTypeSig := X_TL2TypeIde.new(nil, "Self", X_TL2VoidType.instance)
    self
  }

}
