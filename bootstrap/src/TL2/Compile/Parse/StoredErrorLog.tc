class StoredErrorLog
super ErrorLog
meta SimpleConcreteClass(StoredErrorLog)
{
reset :Void
  (*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 *)
{ super.reset
  errors := List.with0
}

errorsDo(f :Fun(position :SourcePos, degree :String, message :String):Void) :Void
{ errors.reverseReader.do(fun(p :Triple(SourcePos, String, String)) {
    f[p.first, p.second, p.third]
  })
}

private

errors :List(Triple(SourcePos, String, String))

message(pos :SourcePos, degree :String, msg :String) :Void
  (* *)
{ super.message(pos, degree, msg)
  errors := List.cons(Triple.new(pos, degree, msg),
	     errors)
}

_init :Void
  (* *)
{
  super._init
  errors := List.with0
  self
}

}
