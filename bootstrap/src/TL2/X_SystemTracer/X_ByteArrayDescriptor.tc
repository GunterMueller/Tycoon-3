class X_ByteArrayDescriptor
super X_AbstractArrayDescriptor
metaclass SingletonClass(X_ByteArrayDescriptor)
public methods

layout :Int
{ layoutByteArray }

elementFmt :Char
{ 'C' }

allocate(o :Object, tl2Class :X_TL2Class, tracer :X_Tracer) :Int
  require o."class".name = tl2Class.name
{
  o."class" == Symbol
  ? { let found = tracer.root.symbolTable.find(o),
      found.isNil
      ? { tycoon.stdout << "Uninterned symbol: " << o << '\n',
          assert found.isNotNil }
      : { found !== o
	  ? { tycoon.stdout << "Duplicate symbol: " << o << '\n',
	      assert found == o } } },
  super.allocate(o,tl2Class,tracer)
}
;
