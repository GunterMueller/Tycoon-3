class FunInput
super Input
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

Input based on function for buffer reads

Author:  Axel Wienberg
Date:    17-Sep-1997
Updates: (Date)	  (Name)	(Description)
*)
meta FunInputClass()

{
readBuffer(buffer :MutableString, start :Int, n :Int) :Int
  (* read n characters into buffer, or fewer if the receiver is exhausted.
     answer the number of characters actually read. *)
require n >= 0
{
  _readBuffer[buffer, start, n]
}

read :Char
  (* *)
{ _buf ::= _buf
  if( _readBuffer[_buf,0,1] = 1
  then: { _buf[0] }
  else: { nil })
}

private

_readBuffer :Fun(:MutableString, :Int, :Int):Int

_buf @:MutableString

_init :Void
  (* *)
{
  super._init
  _buf := MutableString.new(1)@
  self
}

}
