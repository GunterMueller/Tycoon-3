class Finalized
super Object
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

  Objects receiving a 'finalize' message once they become unreachable.

  Author:  Andreas Gawecki, Marc Weicard
  Date:    27-Jan-1997
  Updates: (Date)	  (Name)	(Description)

*)
meta AbstractClass
{
finalize :Void
  (* sublcasses usually override this method in order to
     perform some work before the receiver is in Eden.
     this method is not deferred to allow super-chains of
     finalize-implementations with Finalized::finalize as
     the endpoint.
   *)
{
}

private

_init :Void
  (* establish a weak reference to the receiver *)
{
  super._init
  _initWeakRef
  self
  }

_initWeakRef :WeakRef(Self)
  (* a hook method to provide sublcasses with the generated WeakRef *)
{
  WeakRef.new(self, fun(myself :Finalized) {
    myself.finalize
  })
}

}
