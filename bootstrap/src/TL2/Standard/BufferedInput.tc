class BufferedInput
super BufferInput, InputDecorator
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

Extending Inputs with buffering functionality

Author:  Andreas Gawecki
Date:    13-Feb-1996
Updates: (Date)	  (Name)	(Description)
*)
meta BufferedInputClass()

{
private

_buffer @:MutableString

_bufferSize :Int

_moreBuffer(n :Int) :Bool
  (* Try to get <n> more characters of input.
     Return false at eof. *)
require _position = _bufferSize
{
  _bufferSize := _in.readBuffer(_buffer, 0, _buffer.size)
  _position := 0
  _bufferSize > 0
}

_init :Void
  (* *)
{ super._init
  assert({ _in.isNotNil })
  assert({ _buffer.isNotNil })
  _bufferSize := 0
  _position := 0
  self
}

}
