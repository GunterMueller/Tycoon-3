class False
super Bool
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

Methods for false,  the single instance of this class

Author:  Andreas Gawecki
Date:    01-Mar-1995
Purpose: Values of type Bool.
Updates: (Date)	  (Name)	(Description)

*)
meta OddballClass
{
case(T <: Void,  :Fun():T, ifFalse :Fun():T) :T
  (*ifTrue*)
{
  ifFalse[]
}

case(T <: Void,  :Fun()@:T, ifFalse :Fun()@:T) @:T
  (*ifTrue*)
{
  ifFalse[]@
}

"!" :Bool
  (* *)
{
  true
}

"&"( :Bool) :Bool
  (*aBool*)
{
  self	; equals false 
}

"|"(aBool :Bool) :Bool
  (* *)
{
  aBool
}

"^"(aBool :Bool) :Bool
  (* *)
{
  aBool
}

"&&"( :Fun():Bool) :Bool
  (*ifTrue*)
{
  self	; equals false 
}

"||"(ifFalse :Fun():Bool) :Bool
  (* *)
{
  ifFalse[]
}

"?"( :Fun():Void) :Void
  (*ifTrue
 old syntax *)
{
  }

"?:"(T <: Void,  :Fun():T, ifFalse :Fun():T) :T
  (*ifTrue
 old syntax *)
{
  ifFalse[]
  }

"=>"( :Bool) :Bool
  (*aBool
 old syntax *)
{
  true ; a => b means : (a & b) | !a 
}

"=>=>"( :Fun():Bool) :Bool
  (*ifTrue
 old syntax *)
{
  true ; a => b means : (a & b) | !a 
}

printString :String
  (* *)
{
  "false"
}

}
