class ExternalStream
super IOAccessor, Input, Output
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *

External streams

Author:  Andreas Gawecki
Date:    13-Feb-1996
Updates: (Date)	  (Name)	(Description)

*)
meta AbstractClass
{
bufferedInput :BufferedInput
  (* *)
{
  BufferedInput.new(self, 1024)
}

bufferedOutput :BufferedOutput
  (* *)
{
  BufferedOutput.new(self, 1024)
}

writeAll(aCollection :Collection(Char)) :Void
  (* *)
{
  ;## will be replaced by safe downcast: 
  if( aCollection."class" == String || (
    aCollection."class" == MutableString || 
      aCollection."class" == Symbol)
    then: { string ::= _typeCast(aCollection, :String)
        writeBuffer(string, 0, string.size) }
    else: { super.writeAll(aCollection) })
  }

private

}
