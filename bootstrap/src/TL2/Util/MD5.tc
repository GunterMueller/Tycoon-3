class MD5
super Util
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 instead of the _context/malloc/free hack, MD5 itself should be a C struct!
   As it is, MD5 is not persistent, and may leak memory. *)
meta MD5Class()

{
update(s :String) :Void
  (* *)
require !isFinalized
{
  assert({ !isFinalized })
  tycoon.tycoonOS.md5_update(_context, s, 0, s.size)
}

updateSubString(s :String, start :Int, n :Int) :Void
  (* *)
require !isFinalized
{
  assert({ !isFinalized })
  if( n !== 0 then: { s[start] s[start+n-1] })
  tycoon.tycoonOS.md5_update(_context, s, start, n)
}

isFinalized :Bool
  (* *)
{ _context.isNil }

final :ByteArray
  (* *)
require !isFinalized
  ensure isFinalized
{
  assert({ !isFinalized })
  a ::= ByteArray.new(16)
  tycoon.tycoonOS.md5_final(_context, a)
  tycoon.ansiC.free(_context)
  _context := nil
  a
}

private

_context :Int32

_init :Void
  (* *)
{
  super._init
  _context := tycoon.ansiC.malloc(tycoon.tycoonOS.md5_contextSize)
  tycoon.tycoonOS.md5_init(_context)
  self
}

}
