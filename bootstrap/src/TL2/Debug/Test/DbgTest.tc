class DbgTest
super Debug
meta SingletonClass(DbgTest)
{

startConsumer :Void
{
  consumer := Thread.new({
    Thread.this.name := "consumer"
    consumeLoop
  })
}

produce(s :String) :Void
  (*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
 the character 'X' stops the consumer. *)
{
  s.do(fun(c:Char) {
    ev ::= DbgReturnEvent.new
    ev.result := c
    eventQueue.putEvent(ev)
  })
}

private

eventQueue :DbgEventReader

consumer :Thread(Void)

consumeLoop :Void
{
  ev ::= _typeCast(eventQueue.read, :DbgReturnEvent)
  tycoon.stdout << ev.result << '\n'
  if( ev.result != 'X' then: {
    consumeLoop
  })
}

_init :Void
{
  super._init
  eventQueue := DbgEventReader.new
}

}
