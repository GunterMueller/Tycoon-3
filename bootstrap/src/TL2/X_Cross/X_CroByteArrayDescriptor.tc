class X_CroByteArrayDescriptor
super X_CroAbstractArrayDescriptor
(*
 * This file is part of the Tycoon-2 system.
 *
 * The Tycoon-2 system is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation (Version 2).
 *
 * The Tycoon-2 system is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with the Tycoon-2 system; see the file LICENSE.
 * If not, write to AB 4.02, Softwaresysteme, TU Hamburg-Harburg
 * D-21071 Hamburg, Germany. (http://www.sts.tu-harburg.de)
 * 
 * Copyright (c) 1996-1998 Higher-Order GmbH, Hamburg. All rights reserved.
 *
*)
meta X_CroTspDescriptorClass(X_CroByteArrayDescriptor)
{
layout :Int
  (* *)
{ layoutByteArray }

elementFmt :Char
  (* *)
{ 'C' }

allocate(o :Object, tl2Class :TL2Class) :Int
  (* *)
require o."class".name = tl2Class.name
{
  if( o."class" == Symbol
  then: { found ::= _tracer.root.symbolTable.find(o)
      if( found.isNil
      then: { tycoon.stdout << "Uninterned symbol: " << o << '\n'
          assert({ found.isNotNil }) }
      else: { if( found !== o
	  then: { tycoon.stdout << "Duplicate symbol: " << o << '\n'
	      assert({ found == o }) }) }) })
  super.allocate(o,tl2Class)
}

}
